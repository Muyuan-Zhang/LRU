from fvcore.nn import FlopCountAnalysis
import argparse
from Utils import *
from cacti.models import NetVideo_base_reuse_2, \
    NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_7, \
    NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_52, \
    NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_3, \
    NetVideo_base_reuse_1, NetVideo_base_reuse, \
    NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_29_noin, \
    NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_49

os.environ["CUDA_DEVICE_ORDER"] = "PCI_BUS_ID"
os.environ["CUDA_VISIBLE_DEVICES"] = "0"
os.environ['CUDA_LAUNCH_BLOCKING'] = '1'
## Model Config
parser = argparse.ArgumentParser(description="PyTorch Spectral Compressive Imaging")
parser.add_argument("--size", default=256, type=int, help='The training image size')
parser.add_argument("--stage", default=9, type=int, help='Net stage number')
# parser.add_argument("--reuse", default=[1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], type=int, nargs='*', help='Reuse')
parser.add_argument("--reuse", default=[1, 1, 0, 0, 0, 0, 0, 0, 1], type=int, nargs='*', help='Reuse')
# parser.add_argument("--reuse", default=[1, 0, 0, 0, 0, 1], type=int, nargs='*', help='Reuse')
# parser.add_argument("--reuse", default=[1, 1, 1, 1, 1], type=list, help='Reuse')
# parser.add_argument("--reuse", default=[4, 4, 1], type=list, help='Reuse')
parser.add_argument("--seed", default=42, type=int, help='Random_seed')
# parser.add_argument("--batch_size", default=5, type=int, help='Batch_size')
parser.add_argument("--dim", default=16, type=int, help='dim')
parser.add_argument("--bands", default=8, type=int, help='The number of channels of Datasets')
# parser.add_argument("--lr", default=0.0004, type=float, help='learning rate')
parser.add_argument("--is_train", default=True, type=bool, help='training pattern')
parser.add_argument("--body_share_params", default=False)
# parser.add_argument("--len_shift", default=2, type=int, help=' shift length among bands')
opt = parser.parse_args()

if __name__ == "__main__":
    ##Calculate Parameters and FLOPs
    # model = Net(opt)
    # model = NetVideo(opt)
    # model = NetVideo_conv3d(opt)
    # model = NetVideo_conv3d_SCB(opt)
    # model = NetVideo_conv3d_TSAB(opt)
    # model = NetVideo_conv3d_TSAB_shareBody_deepcache(opt)
    # model = NetVideo_conv3d_TSAB_shareBody_action(opt)
    # model = NetVideo_conv3d_TSAB_shareBody_action_changeSample(opt)
    # model = NetVideo_conv3d_TSAB_shareBody_action_changeSample_seriesConnection_withoutDP(opt)
    # model = NetVideo_conv3d_TSAB_shareBody_action_changeSample_seriesConnection_withoutDP(opt)
    # model = NetVideo_conv3d_TSAB_shareBody_action_changeSample_seriesConnection_withoutDP_deepcache(opt)
    # model = NetVideo_conv3d_TSAB_shareBody_action_changeSample_seriesConnection_withoutDP_deepcache_keepy(opt)
    # model = NetVideo_conv3d_TSAB_shareBody_action_changeSample_seriesConnection_withoutDP_deepcache_keepy_reuse(opt)
    # model = NetVideo_conv3d_TSAB_shareBody_action_changeSample_seriesConnection_withoutDP_deepcache_keepy_reuse_merge(opt)
    # model = NetVideo_conv3d_TSAB_shareBody_action_changeSample_seriesConnection_withoutDP_deepcache_keepy_reuse_merge_plus(opt)
    # model = NetVideo_conv3d_TSAB_shareBody_action_changeSample_seriesConnection_withoutDP_deepcache_keepy_FAB_TSAB(opt)
    # model = NetVideo_conv3d_TSAB_shareBody_action_changeSample_seriesConnection_withoutDP_deepcache_keepy_withoutT(opt)
    # model = NetVideo_conv3d_TSAB_shareBody_action_changeSample_seriesConnection_withoutDP_deepcache_lightweight_changeConv3d(opt)
    # model = NetVideo_conv3d_TSAB_shareBody_action_changeSample_seriesConnection_withoutDP_deepcache_cal(opt)
    # model = NetVideo_conv3d_TSAB_shareBody_action_changeSample_seriesConnection_withoutDP_calssim(opt)
    # model = NetVideo_conv3d_TSAB_shareBody_action_changeSample_seriesConnection_withoutDP_keepy(opt)
    # model = NetVideo_conv3d_TSAB_shareBody_action_changeSample_seriesConnection_withoutDP_keep_y(opt)
    # model = NetVideo_conv3d_TSAB_shareBody_action_changeSample_seriesConnection_withoutDP_keep_y_newdeepcache(opt)
    # model = NetVideo_conv3d_TSAB_shareBody_action_changeSample_seriesConnection_withoutDP_keep_y_reduceGPU(opt)
    # model = NetVideo_conv3d_TSAB_shareBody_action_changeSample_seriesConnection_withoutDP_keep_y_ffn(opt)
    # model = NetVideo_conv3d_TSAB_shareBody_action_changeSample_seriesConnection_withoutDP_MA(opt)
    # model = NetVideo_conv3d_TSAB_shareBody_action_changeSample_seriesConnection_withoutDP_changeIPB(opt)
    # model = NetVideo_conv3d_TSAB_shareBody_action_changeSample_resFemVrm(opt)
    # model = NetVideo_conv3d_TSAB_shareBody_action_deepcache(opt)
    # model = NetVideo_base(opt)
    # model = NetVideo_base_noStageInteraction(opt)
    # model = NetVideo_base_noStageInteraction_normalunfolding(opt)
    # model = NetVideo_base_noStageInteraction_normalunfolding_1(opt)
    # model = NetVideo_base_noStageInteraction_deepcache(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_a ction(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_ffnlw(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain(opt)

    model = NetVideo_base_reuse(opt)
    model = NetVideo_base_reuse_1(opt)
    model = NetVideo_base_reuse_2(opt)

    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_1(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_2(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_3(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_4(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_5(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_6(opt)
    model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_7(opt)


    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_qkv(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_dw(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_10(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_11(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_19(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_20(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_21(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_22(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_23(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_24(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_25(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_26(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_27(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_28(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_29(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_29_test(opt)
    model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_29_noin(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_30(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_31(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_32(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_33(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_34(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_35(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_36(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_37(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_38(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_39(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_40(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_42(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_43(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_44(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_45(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_46(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_47(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_48(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_49(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_51(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_52(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_53(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_54(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_55(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_56(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_57(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_50(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_43(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_23(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_18(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_15(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_13(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_17(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_16(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_18(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_8(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_9(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_3(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_4(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_5(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_cross_7(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_ema_both(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_ema_both_DBCA(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_ema_both_DBCA_d(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_ema_both_C2RV_divide(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_ema_both_C2RV_position(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_ema_spatial(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_fourier(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_new_normalunfolding_stconv(opt)
    # model = NetVideo_base_noStageInteraction_deepcache_action_ffnlw_single_multireuse_multimain_replace_removef(opt)
    # model = NetVideo_base_pixelattention(opt)
    # model = NetVideo_base_Tspatialattention(opt)
    # model = NetVideo_base_lngn(opt)
    # model = NetVideo_base_Tposition(opt)
    # model = NetVideo_base_poolattention(opt)
    # model = NetVideo_base_ffnchange(opt)
    # model = NetVideo_base_ffnchange2(opt)
    # model = NetVideo_base_dense(opt)
    # model = NetVideo_base_Tenhance(opt)
    # model = NetVideo_base_Tswin(opt)
    # model = NetVideo_base_removeDS(opt)
    # model = NetVideo_base_resnet(opt)
    # model = NetVideo_base_resnet_GDFN(opt)
    # model = NetVideo_base_resnet_ffn(opt)
    # model = NetVideo_base_resnet_ffn(opt)
    # model = NetVideo_base_resnet_repffn(opt)
    # model = NetVideo_base_resnet_testFAB_TSAB(opt)

    # model = EfficientSCI()

    model.cuda()
    model.eval()
    # model.reparameterize_all()
    # input1 = torch.randn([1, 1, 256, 310]).cuda()
    input1 = torch.randn([1, 1, 256, 256]).cuda()
    # input1 = torch.randn([1, 1, 512, 512]).cuda()
    # input1 = torch.randn([1, 1, 128, 128]).cuda()
    input2 = torch.randn(1, 8, 256, 256).cuda()
    # input2 = torch.randn(1, 8, 512, 512).cuda()
    # input2 = torch.randn(1, 8, 128, 128).cuda()
    # input3 = torch.randn(1, 256, 310).cuda()
    # input3 = torch.randn(1, 256, 256).cuda()
    input3 = torch.randn(1, 1, 256, 256).cuda()
    # input3 = torch.randn(1, 1, 512, 512).cuda()
    # input3 = torch.randn(1, 128, 128).cuda()
    with torch.no_grad():
        # flops, params = profile(model, inputs=(input1, (input2,input3)))
        # print("FLOPs=", str(flops / (1024*1024*1024)) + '{}'.format("G"))
        # print("params=", str(params / (1024*1024)) + '{}'.format("M"))

        flops = FlopCountAnalysis(model, inputs=(input1, (input2, input3)))
        # flops = FlopCountAnalysis(model, inputs=(input1, input2, input3))
        n_param = sum([p.nelement() for p in model.parameters()])
        print("FLOPs=", str(flops.total() / (1024 * 1024 * 1024)) + '{}'.format("G"))
        print("params=", str(n_param / (1024 * 1024)) + '{}'.format("M"))
